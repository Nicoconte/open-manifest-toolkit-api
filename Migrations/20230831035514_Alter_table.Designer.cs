// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Open.ManifestToolkit.API.Data;

#nullable disable

namespace Open.ManifestToolkit.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230831035514_Alter_table")]
    partial class Alter_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.Environment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("Environments");
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.Manifest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("GithubUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Manifests");
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.SceInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettingId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("SceInstances");
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.Setting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.Environment", b =>
                {
                    b.HasOne("Open.ManifestToolkit.API.Entities.Setting", null)
                        .WithMany("Environments")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.SceInstance", b =>
                {
                    b.HasOne("Open.ManifestToolkit.API.Entities.Setting", null)
                        .WithMany("SceInstances")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Open.ManifestToolkit.API.Entities.Setting", b =>
                {
                    b.Navigation("Environments");

                    b.Navigation("SceInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
